<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在手机端无服务器部署PagerMaid-Modify</title>
    <link href="/2021/10/07/pm/"/>
    <url>/2021/10/07/pm/</url>
    
    <content type="html"><![CDATA[<p>前段时间看见pm官方说:</p><p><img src="https://static01.imgkr.com/temp/73909bbeab4442b686dc2f7f03a8f37c.jpg" alt="官方发的"></img></p><p>我心头一紧–</p><p>什么？难道白嫖Railway的生活到此结束了吗？？</p><p>而此时，我的电脑正好坏了。</p><p>“看来，关键时刻，还得我们的主角出马了…”</p><p>于是，我打开了Termux，开启了如下操作:</p><p class="note note-danger">此教程基于官方Github'Ubuntu'方法，可先自行查看:https://github.com/Xtao-Labs/PagerMaid-Modify/wiki/Ubuntu-16.04-安装详解</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>万事装为先，手机上没这个东西也不成事啊！</p><p>那么我们按照官方步骤来:</p><p>执行命令，进行git库更新:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">apt-get install --only-upgrade git -y<br></code></pre></div></td></tr></table></figure><p class="note note-info">这里默认你是非root用户，因为非root用户无法在Termux执行sudo指令，故这里省去了sudo</p><p>然后，我们需要进入usr/var/lib/这个文件夹，</p><p>由于Termux打开后的默认文件夹是与usr同级的home文件夹，</p><p>所以我们要进行如下操作:</p><p><img src="https://static01.imgkr.com/temp/43418a63bbd647f49f3ff99120945941.jpg" alt="操作"></img></p><p>需要说明的是:</p><p><code>cd ..</code>指的是返回上一级文件夹;</p><p>好的！我们现在已经进入了lib文件夹，接下来执行指令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">git clone https://github.com/xtaodada/PagerMaid-Modify.git pagermaid //从仓库拉取并命名文件夹为pagermaid<br><br>cd pagermaid //打开pagermaid文件夹<br></code></pre></div></td></tr></table></figure><p>然后，官方提供了几个软件包供我们安装，</p><p>不过我试过了，都安装不上的哈哈哈，</p><p>所以我们跳过这一步(有兴趣自己去看看，指不定就成功了)</p><p>接下来，非常重要的一步！</p><p class="note note-danger">安装matplotlib！！</p><p>或者你先不安装也行，不过我保证你会卡在这个地方:</p><p><img src="https://static01.imgkr.com/temp/7c2156bbba614bcc8f8c60c43847a666.jpg" alt="卡住了"></img></p><p>那么我们怎么安装matplotlib呢？</p><p>昨天我查了非常多的资料，一个一个试，但是都失败了，</p><p>直到某一个命令之后，我成功了，</p><p>这里提供几个方法，建议都试一下:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">python -m pip install matplotlib //第一种方法<br><br>python -m pip install --index https://mirrors.ustc.edu.cn/pypi/web/simple/ matplotlib==3.1.3 //第二种方法<br><br>apt-get install python3-matplotlib //第三种方法<br><br>pip install matplotlib //第四种方法<br><br>pip install --user matplotlib //第五种方法<br></code></pre></div></td></tr></table></figure><p class="note note-danger">几乎每一种方法都会卡在图片所示的地方，这时候需要等待1分钟左右，如果还没有反应就换下一种方法</p><p class="note note-info">我在这里是翻看了剪贴板的所有记录，如果还不成功的话就需要自己Google了，非常抱歉！</p><p>安装成功之后，我们继续执行官方接下来的命令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pip3 install -r requirements.txt //安装依赖包<br></code></pre></div></td></tr></table></figure><p>这一步会等待非常久，而如果你跳过了上面安装matplotlib的步骤，是一定会卡在那张图片的位置的。</p><h2 id="修改并登录"><a href="#修改并登录" class="headerlink" title="修改并登录"></a>修改并登录</h2><p>执行如下命令，将配置config.gen.yml文件复制一份并且命名为config.yml:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cp config.gen.yml config.yml<br></code></pre></div></td></tr></table></figure><p>然后使用nano进行编辑(vim也可以):</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">nano config.yml<br></code></pre></div></td></tr></table></figure><p><img src="https://static01.imgkr.com/temp/ccb83f8f940a499f8dfbb4bcc0e246fa.jpg" alt="如图所示"></img></p><p>在图片的位置填入你的<code>api_key</code>和<code> api_hash</code>，</p><p>获取方法有两种:</p><ul><li><p>Telegram官方获取:<a href="https://my.telegram.org/">https://my.telegram.org/</a></p></li><li><p>Telegram机器人获取:@PagerMaid_Modify_bot (给它发送/app)</p></li></ul><p>填写完成后，保存退出。</p><p>接下来，使用如下命令进行登录:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">python3 -m pagermaid<br></code></pre></div></td></tr></table></figure><p>期间会提示你输入完整的手机号码，以及Telegram发给你的验证码，</p><p>如果开启了两步验证，还需要输入两步验证密码;</p><p>OK，至此如果没有问题的话，你就能看到如下的状态:</p><p><img src="https://static01.imgkr.com/temp/3237efdb25b646219c0c282148fa0214.jpg" alt="成功了"></img></p><hr><p>感觉这篇教程写得很水，尤其是matplotlib安装那点，</p><p>属于我自己记性不好的问题了！</p><p class="note note-danger">下次一定记住！</p><p>我是听话的便当，</p><p>喜欢就请收藏本站吧！</p><p>bye~</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Termux都有哪些可玩的地方</title>
    <link href="/2021/10/06/tgp/"/>
    <url>/2021/10/06/tgp/</url>
    
    <content type="html"><![CDATA[<p>今天介绍一些Github上”功能性”很强的项目，</p><p>同时，这些项目共同的特点就是–</p><ul><li><p>都可以在命令行使用;</p></li><li><p>在Termux上使用甚至比在电脑上使用方便！</p></li></ul><h2 id="命令行网易云"><a href="#命令行网易云" class="headerlink" title="命令行网易云"></a>命令行网易云</h2><p><img src="https://static01.imgkr.com/temp/797ddfc99fdf47ab81daf17aebe9c969.jpg" alt="非常好操作，而且很简洁！"></img></p><p>仓库地址:<a href="https://github.com/darknessomi/musicbox">https://github.com/darknessomi/musicbox</a></p><p>安装方法:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pkg install python //安装python<br><br>pkg install mpg123 //安装播放器<br><br>curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - //安装poetry<br><br>git clone https://github.com/darknessomi/musicbox.git &amp;&amp; cd musicbox //克隆分支<br><br>poetry build &amp;&amp; poetry install //安装主程序<br><br>musicbox //运行！<br></code></pre></div></td></tr></table></figure><p>按理说这样是直接可以安装成功的，</p><p>官方给的方法里面跳过了安装python和poetry(python包管理器)</p><p>失败了的话私聊我！</p><p>简单使用方法:</p><p><code>j</code>和<code>k</code>是上一条和下一条(建议在英文输入模式下)</p><p><code>空格</code>是暂停或播放。</p><h2 id="命令行翻译"><a href="#命令行翻译" class="headerlink" title="命令行翻译"></a>命令行翻译</h2><p>一共有两个:</p><p><img src="https://static01.imgkr.com/temp/7c5e7bdf358644c593e39bd96b400e8f.jpg" alt="非常方便啊 中英互译"></img></p><p>仓库地址:<a href="https://github.com/FeeiCN/dict">https://github.com/FeeiCN/dict</a></p><p>安装方法:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pip install dict-cli<br></code></pre></div></td></tr></table></figure><p>使用方法:</p><ul><li><p>dict 中文(翻译成英文)</p></li><li><p>dict english(翻译成中文)</p></li></ul><hr><p><img src="https://static01.imgkr.com/temp/e95144ad1e3344f48ebad71f0fcae374.jpg" alt="这个更简洁，而且是有道翻译"></img></p><p>仓库地址:<a href="https://github.com/hewentaowx/yd_translate">https://github.com/hewentaowx/yd_translate</a></p><p>安装方法:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install -g yd_translate<br></code></pre></div></td></tr></table></figure><p>使用方法:</p><ul><li><p>yd 中文(翻译成英文)</p></li><li><p>yd 英文(翻译成中文)</p></li></ul><h2 id="YouTube命令行解析"><a href="#YouTube命令行解析" class="headerlink" title="YouTube命令行解析"></a>YouTube命令行解析</h2><p><img src="https://static01.imgkr.com/temp/dc53a36a4632425d9e17281f3966f0cc.jpg" alt="直接返回了直链"></img></p><p>没有仓库！</p><p>安装方法:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pkg install youtubedr<br></code></pre></div></td></tr></table></figure><p>使用方法:</p><ul><li>youtubedr url 视频链接(解析后返回)</li></ul><HR style="border:3 double #987cb9" width="30%" color=#987cb9 SIZE=3><p>我是听话的便当，</p><p>bye~</p>]]></content>
    
    
    
    <tags>
      
      <tag>Termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在手机端搭建并部署Hexo</title>
    <link href="/2021/10/05/pwh/"/>
    <url>/2021/10/05/pwh/</url>
    
    <content type="html"><![CDATA[<p>如题，本篇文章将会简要地说明一下如何在手机端搭建Hexo博客。</p><p>(等电脑修好了，绝对会把这篇文章放到原来的博客上！！)</p><h2 id="第一步-安装"><a href="#第一步-安装" class="headerlink" title="第一步 安装"></a>第一步 安装</h2><p>我们需要下载的软件有:Termux。</p><p>你可能想问:什么？就一个吗？？</p><p>没错，Termux作为我面前见过最nb的安卓应用，用它部署Hexo简直绰绰有余！</p><p>点击这里安装最新版本的Termux:<a href="https://f-droid.org/repo/com.termux_117.apk">https://f-droid.org/repo/com.termux_117.apk</a></p><p class="note note-danger">注意:谷歌商店的版本特别老，不要从那里安装</p><p>好了，第一步完成！</p><h2 id="第二步-安装"><a href="#第二步-安装" class="headerlink" title="第二步 安装"></a>第二步 安装</h2><p>你可能又想问了:什么？不是就安装一个吗？？</p><p>没错，在手机上安装的软件只有Termux一个，</p><p>而我们此时要在Termux里安装软件。</p><p class="note note-primary">好的！从现在开始，你需要把Termux想象成你电脑上的命令行！而这台电脑已经给你装好了基本的包管理器！听不懂没关系！</p><p>接下来我们运行几个命令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pkg install nodejs //安装node.js<br><br>pkg install git //安装git<br><br>pkg install vim //安装vim命令行编辑器<br><br>或者<br><br>pkg install nano //安装nano命令行编辑器(如果你觉得vim不好用的话)<br><br>pkg install openssh //安装ssh以连接到Github仓库<br></code></pre></div></td></tr></table></figure><p class="note note-info">个人推荐用nano编辑器，因为比较方便</p><p>好了！第二步也完成！</p><h2 id="第三步-生成-高端玩家可以跳过"><a href="#第三步-生成-高端玩家可以跳过" class="headerlink" title="第三步 生成(高端玩家可以跳过)"></a>第三步 生成(高端玩家可以跳过)</h2><p>我们重启一次Termux(这样子可以在重启时打开默认的home文件夹，如果刚刚安装的时候你没乱打开文件夹也行)</p><p>顺便说一句:打开文件夹的方式是–</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd xxx(文件夹名)<br></code></pre></div></td></tr></table></figure><p>然后，使用如下指令，创建一个名为hexo的文件夹:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">mkdir hexo<br></code></pre></div></td></tr></table></figure><p>进入文件夹:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd hexo<br></code></pre></div></td></tr></table></figure><p>使用Hexo的生成指令:</p><p>(这跟电脑一模一样好吧！下面知道步骤的人可以先行去操作了)</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install hexo-cli -g //生成hexo的配置文件<br><br>npm install hexo-deployer-git --save //git插件<br></code></pre></div></td></tr></table></figure><p class="note note-info">当然，在手机上的Hexo指令和电脑上是一模一样的，比方说hexo s，就是在本地4000端口生成预览;hexo new xxx，就是生成链接为xxx的文章</p><p>那么主题怎么安装呢？</p><p>我们随便打开一个Hexo主题仓库:</p><p class="note note-danger">注意:使用浏览器的电脑模式</p><p><img src="https://static01.imgkr.com/temp/7b59339ed3b943c8ae0c2e6b4a60d221.jpg" alt="这是一张图片"></img></p><p>如图所示，画圈圈的位置，我们复制一下ssh格式的链接;</p><p>然后在打开themes文件夹(cd)，执行命令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">git clone git@github.com:fluid-dev/hexo-theme-fluid.git<br></code></pre></div></td></tr></table></figure><p>OK，等待下载完成之后，你就会发现themes文件夹多了一个名为主题名的文件夹;</p><p>怎么发现呢？</p><p>使用指令<code>dir</code>就可以查看所在文件夹的所有文件和子文件夹了！</p><p>关于编辑问题，跟电脑上如出一辙，什么主题_config.yml文件的配置，你肯定比我还懂。</p><p>那么怎么编辑？</p><h2 id="第四步-编辑"><a href="#第四步-编辑" class="headerlink" title="第四步 编辑"></a>第四步 编辑</h2><p>如果你选择使用了vim编辑器，那么我在这里只告诉你几个简单的指令就行了:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">vi 文件名 //打开一个文件<br><br>i //打开之后直接输入字母i，进入编辑模式<br><br>ESC //结束编辑的话，先按这个，Termux键盘上有<br><br>:wq //:指的是输入什么指令，w指令是保存，q指令是退出<br></code></pre></div></td></tr></table></figure><p>如果你选择了nano编辑器，那么我在这里也只告诉你几个简单的指令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">nano 文件名 //打开一个文件，打开之后直接就能编辑了<br><br>ctrl o //保存这个文件，保存之后要再回车一下<br><br>ctrl x //退出编辑<br></code></pre></div></td></tr></table></figure><p class="note note-danger">重点来了！在电脑端的时候，我说明的是:在根目录的_config.yml里，repo是https形式，但是Github在八月几号的时候已经不允许https格式登陆了！所以我们在repo那一行的时候，要填写成ssh格式，就像上面那个主题的clone方式一样！！</p><p><img src="https://static01.imgkr.com/temp/1c212a124a2f4f248c6f32353dd2dd82.jpg" alt="就像这样"></img></p><p>如果你没听懂，那么单独找我:我的QQ是729301277;</p><p>OK，编辑的过程比较漫长，所以我不细讲了，总之vim和nano都是会越用越顺手的。</p><h2 id="第五步-ssh"><a href="#第五步-ssh" class="headerlink" title="第五步 ssh"></a>第五步 ssh</h2><p>建议你先看一下这个视频，以了解通过git推送到仓库的大概思路:</p><center><iframe src="//player.bilibili.com/player.html?aid=541656834&bvid=BV1fi4y1u7h7&cid=221722538&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" height="400" width="600" allowfullscreen="true"> </iframe></center><p>当然，最后我发现其实并不是那么麻烦，</p><p>你也不需要使用git指令推送仓库，最后一步还是用<code>hexo g -d</code>进行上传，</p><p>那么怎么做呢？(视频的的重点是前几十秒，在账户添加ssh的时候)</p><p>由于视频省略了前面的步骤啊，就是怎么生成公钥和私钥，</p><p>生成方法可以百度(更清晰)，我在这里简单说明一下，</p><p>执行命令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">//首先检测一下有没有账户:<br><br>git config user.name<br><br>git config user.email<br><br>//如果没有的话，使用下面的命令添加:<br><br>git config –global user.name ‘xxxxx’ //这里填你的Github信息 <br><br>git config –global user.email ‘xxx@xx.com’ //这里是邮箱<br><br>ssh-keygen -t rsa -C ‘上面的邮箱’ //生成ssh密钥<br><br>//之后返回文件夹，打开文件夹，找到id_rsa.pub文件，复制进去就行了<br></code></pre></div></td></tr></table></figure><p>如图，我已经成功了:</p><p><img src="https://static01.imgkr.com/temp/ffb4a4b6c04a450ba313c075dfb9d0b7.jpg" alt="这是一张图片"></img></p><p>之后，尽情编辑你的hexo吧！</p><p>使用<code>hexo s</code>生成本地预览;使用<code>hexo new xxx</code>生成新文章，</p><p>使用<code>hexo g -d</code>快速上传;</p><p class="note note-danger">如果你还是失败了，请先检查根目录_config.yml最后几行的repo格式，是否已经换成了ssh格式;此外，我省略了大部分此文件的编辑细节，请详细阅读:https://byn6.github.io/2021/08/29/gp-h/</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>我也是怕自己忘记了，这里说明几个常用的文件指令:</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">rm -rf 文件名 //删除某文件<br><br>dir //查看当前目录下所有目录<br><br>dir -al //查看当前目录下所有目录(含隐藏目录)<br><br>mkdir 文件名 //创建文件夹<br><br>mv a b //如果a是文件，b是文件夹，则指的是把a移动到b<br><br>mv a b //如果a和b都是文件，则指的是重命名a为b<br><br>mv * ../ //这个非常强大，可以将当前目录下所有文件移动到上层目录。<br><br>copy a b //把a复制到b<br></code></pre></div></td></tr></table></figure><HR style="border:3 double #987cb9" width="30%" color=#987cb9 SIZE=3><p>我是听话的便当，</p><p>bye~</p><hr><footer><center><tt>Made with My MI6X，Powered by Termux & Hexo.</tt></center></footer>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/10/04/test/"/>
    <url>/2021/10/04/test/</url>
    
    <content type="html"><![CDATA[<p>哈哈哈哈哈如果你看到了这个页面说明hexo在手机上部署是可行的！！！！<br>测试一下:<br><strong>粗体字</strong><br><em>斜体字</em><br><del>删除线</del><br><a href="https://byn6.github.io/">超链接</a></p><hr><blockquote><p>区块<br>区块</p><blockquote><p>区块</p></blockquote></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">var</span> code = <span class="hljs-number">123456</span>;<br><span class="hljs-keyword">var</span> key = <span class="hljs-number">666666</span>;<br><span class="hljs-keyword">var</span> coded = code ^ key;<br>document.write(<span class="hljs-string">&quot;加密后的密码是:&quot;</span> + coded);<br></code></pre></div></td></tr></table></figure><p><code>代码段</code></p><p>测试结束！</p>]]></content>
    
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/10/04/hello-world/"/>
    <url>/2021/10/04/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
